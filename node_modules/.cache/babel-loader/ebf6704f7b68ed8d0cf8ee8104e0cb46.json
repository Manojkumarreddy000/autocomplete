{"ast":null,"code":"var _jsxFileName = \"/home/manoj/Documents/AI/trade_search/src/search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from 'axios'; // import { useHistory } from 'react-router-dom';\n\nimport { Link } from \"react-router-dom\"; // import {Link,useLocation,withRouter,Redirect} from \"react-router-dom\";\n\nfunction get_list_from_buckets(buckets) {\n  let list_bucket = buckets.map(item => {\n    let index = item.item._index;\n    let href = \"\";\n    let title = \"\";\n\n    if (index === \"economics_v102_test\") {\n      href = economics_href + item._source.Variablepath;\n      title = item._source.VariableName;\n    }\n\n    if (index === \"demographics_v1_test\") {\n      href = economics_href + item._source.Variablepath;\n      title = item._source.VariableName;\n    }\n\n    if (index === \"trade_export_yearly_v1\" || index === \"trade_import_yearly_v1\") {\n      href = trade_href + item._source.Variablepath;\n      title = item._source.HSCodeName;\n    }\n\n    return {\n      index: index,\n      show: title,\n      href: href\n    };\n  });\n}\n\nfunction AutoComo(props) {\n  useEffect(() => {}, []);\n  const [value, setVal] = useState();\n  const [items, setItems] = useState([]); // var value = \"\"\n\n  function handleChange(VariableName) {\n    setItems([]);\n\n    if (VariableName == \"\") {\n      return;\n    }\n\n    var url = 'https://elastic.airesearch.in/economics_v102_test,demographics_v1_test,trade_export_yearly_v1,trade_import_yearly_v1/_search';\n    var query4 = {\n      \"_source\": [\"HSCode\", \"HSName\", \"HSCodeName\", \"VariableName\", \"VariablePath\", \"Country\"],\n      \"query\": {\n        \"bool\": {\n          \"must\": [{\n            \"query_string\": {\n              \"fields\": [\"HSCode^3\", \"HSName^2\", \"HSCodeName^2\", \"VariableName^5\", \"VariablePath\"],\n              \"query\": `${VariableName}~`,\n              \"minimum_should_match\": 1\n            }\n          }]\n        }\n      }\n    };\n    axios.post(url, query4).then(d => {\n      if (d.status === 200) {\n        console.log(d.data);\n        let total_data = d.data.hits.hits;\n        let list = get_list_from_buckets(total_data);\n        console.log(list);\n        setItems(list);\n      } else {\n        console.log(\"err\");\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"Error!\");\n      }\n    });\n  } // const classes = useStyles();\n\n\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, \"home\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, {\n      getItemValue: item => item.path,\n      items: items,\n      renderItem: (item, isHighlighted) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: isHighlighted ? 'lightgray' : 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }),\n      value: value,\n      onChange: e => {\n        setVal(e.target.value);\n        handleChange(e.target.value);\n        console.log(\"target value is\", e.target.value, \".\");\n      } // onSelect={(val) => {setVal(val);console.log(\"val\",val)}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nexport default AutoComo;","map":{"version":3,"sources":["/home/manoj/Documents/AI/trade_search/src/search.js"],"names":["React","useState","useEffect","Autocomplete","axios","Link","get_list_from_buckets","buckets","list_bucket","map","item","index","_index","href","title","economics_href","_source","Variablepath","VariableName","trade_href","HSCodeName","show","AutoComo","props","value","setVal","items","setItems","handleChange","url","query4","post","then","d","status","console","log","data","total_data","hits","list","catch","error","path","isHighlighted","background","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from 'axios'\n// import { useHistory } from 'react-router-dom';\nimport {Link} from \"react-router-dom\";\n// import {Link,useLocation,withRouter,Redirect} from \"react-router-dom\";\n\nfunction get_list_from_buckets(buckets){\n  let list_bucket = buckets.map(item =>{\n    let index = item.item._index\n    let href = \"\"\n    let title = \"\"\n    if(index === \"economics_v102_test\"){\n      href = economics_href+item._source.Variablepath\n      title = item._source.VariableName\n    }\n    if(index === \"demographics_v1_test\"){\n      href = economics_href+item._source.Variablepath\n      title = item._source.VariableName\n    }\n    if(index === \"trade_export_yearly_v1\" || index === \"trade_import_yearly_v1\"){\n      href = trade_href+item._source.Variablepath\n      title = item._source.HSCodeName\n    }\n\n    return {index:index, show:title, href:href}\n  })\n}\n\n\nfunction AutoComo(props) {\n\n  useEffect(() => {\n  },[])\n\n  const [value,setVal] = useState()\n  const [items,setItems] = useState([])\n\n  \n  // var value = \"\"\n\n  function handleChange(VariableName){\n    setItems([]);\n    if(VariableName == \"\"){\n      \n      return\n    }\n  \n    var url = 'https://elastic.airesearch.in/economics_v102_test,demographics_v1_test,trade_export_yearly_v1,trade_import_yearly_v1/_search'\n          \n  var query4 = {   \n      \"_source\":[\"HSCode\",\"HSName\",\"HSCodeName\",\"VariableName\",\"VariablePath\",\"Country\"],\n      \"query\": {\n      \"bool\": {\n        \"must\":[\n          {\n          \"query_string\":{\n              \"fields\": [\"HSCode^3\",\"HSName^2\",\"HSCodeName^2\",\"VariableName^5\",\"VariablePath\"],\n              \"query\": `${VariableName}~`,\n              \"minimum_should_match\": 1\n            }\n          }\n        ]\n      }\n    }\n  }\n    \n          \n            \n            \n  axios.post(url, query4)\n    .then( d => {\n      if(d.status === 200 ){\n        console.log(d.data);\n        let total_data = d.data.hits.hits\n\n        let list = get_list_from_buckets(total_data)\n        console.log(list)\n        setItems(list)\n      }\n      else{\n        console.log(\"err\")\n      }\n    })\n    .catch( error => {\n      if (error) {\n        console.log(error)\n      }\n      else{\n        console.log(\"Error!\");\n      }\n    });\n\n}\n\n  // const classes = useStyles();\n\n  return (\n    // <div className={classes.root}>\n    <div>\n      <a href=\"/\" >home</a>\n      <br /><br /><br />\n      \n      <Autocomplete\n            getItemValue={(item) => item.path}\n            items={items}\n            renderItem={(item, isHighlighted) =>\n              <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                \n                {/* <Link to={{items}}>\n                {item.label}\n                </Link> */}\n                \n              </div>\n            }\n            value={value}\n            onChange={(e) => {setVal(e.target.value);handleChange(e.target.value);console.log(\"target value is\",e.target.value,\".\")}}\n            \n            // onSelect={(val) => {setVal(val);console.log(\"val\",val)}}\n        />\n          \n          \n    </div>\n  );\n}\n\n\n\n\nexport default AutoComo ;"]},"metadata":{},"sourceType":"module"}